{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/hp/Desktop/codehouses/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _jsxFileName = \"/home/hp/Desktop/codehouses/src/components/Btn.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// material design btn\nimport Ripple from \"react-ripples\";\n\nvar Btn = function Btn(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      onClick = _ref.onClick;\n\n  function createRipple(event) {\n    var button = event.currentTarget;\n    var circle = window.document.createElement(\"span\");\n    var diameter = Math.max(button.clientWidth, button.clientHeight);\n    var radius = diameter / 2;\n    circle.style.width = circle.style.height = \"\".concat(diameter, \"px\");\n    circle.style.left = \"\".concat(event.clientX - button.offsetLeft - radius, \"px\");\n    circle.style.top = \"\".concat(event.clientY - button.offsetTop - radius, \"px\");\n    circle.classList.add(\"ripple\");\n    var ripple = button.getElementsByClassName(\"ripple\")[0];\n\n    if (ripple) {\n      ripple.remove();\n    }\n\n    button.appendChild(circle);\n  }\n\n  var buttons = window.document.getElementsByTagName(\"button\");\n\n  var _iterator = _createForOfIteratorHelper(buttons),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var button = _step.value;\n      button.addEventListener(\"click\", createRipple);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return __jsx(Ripple, {\n    className: \"cursor-pointer \".concat(className, \" overflow-hidden rounded-md\"),\n    onClick: onClick,\n    duration: 300,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default Btn;","map":{"version":3,"sources":["/home/hp/Desktop/codehouses/src/components/Btn.js"],"names":["Ripple","Btn","children","className","onClick","createRipple","event","button","currentTarget","circle","window","document","createElement","diameter","Math","max","clientWidth","clientHeight","radius","style","width","height","left","clientX","offsetLeft","top","clientY","offsetTop","classList","add","ripple","getElementsByClassName","remove","appendChild","buttons","getElementsByTagName","addEventListener"],"mappings":";;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,eAAnB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAsC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAChD,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACE,aAArB;AAEA,QAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,MAA9B,CAAf;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASR,MAAM,CAACS,WAAhB,EAA6BT,MAAM,CAACU,YAApC,CAAjB;AACA,QAAMC,MAAM,GAAGL,QAAQ,GAAG,CAA1B;AAEAJ,IAAAA,MAAM,CAACU,KAAP,CAAaC,KAAb,GAAqBX,MAAM,CAACU,KAAP,CAAaE,MAAb,aAAyBR,QAAzB,OAArB;AACAJ,IAAAA,MAAM,CAACU,KAAP,CAAaG,IAAb,aAAuBhB,KAAK,CAACiB,OAAN,GAAgBhB,MAAM,CAACiB,UAAvB,GAAoCN,MAA3D;AACAT,IAAAA,MAAM,CAACU,KAAP,CAAaM,GAAb,aAAsBnB,KAAK,CAACoB,OAAN,GAAgBnB,MAAM,CAACoB,SAAvB,GAAmCT,MAAzD;AACAT,IAAAA,MAAM,CAACmB,SAAP,CAAiBC,GAAjB,CAAqB,QAArB;AAEA,QAAMC,MAAM,GAAGvB,MAAM,CAACwB,sBAAP,CAA8B,QAA9B,EAAwC,CAAxC,CAAf;;AAEA,QAAID,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,MAAP;AACD;;AAEDzB,IAAAA,MAAM,CAAC0B,WAAP,CAAmBxB,MAAnB;AACD;;AAED,MAAMyB,OAAO,GAAGxB,MAAM,CAACC,QAAP,CAAgBwB,oBAAhB,CAAqC,QAArC,CAAhB;;AAtBgD,6CAuB3BD,OAvB2B;AAAA;;AAAA;AAuBhD,wDAA8B;AAAA,UAAnB3B,MAAmB;AAC5BA,MAAAA,MAAM,CAAC6B,gBAAP,CAAwB,OAAxB,EAAiC/B,YAAjC;AACD;AAzB+C;AAAA;AAAA;AAAA;AAAA;;AA0BhD,SACE,MAAC,MAAD;AACE,IAAA,SAAS,2BAAoBF,SAApB,gCADX;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,QAAQ,EAAE,GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,QALH,CADF;AASD,CAnCD;;AAqCA,eAAeD,GAAf","sourcesContent":["// material design btn\nimport Ripple from \"react-ripples\";\n\nconst Btn = ({ children, className, onClick }) => {\n  function createRipple(event) {\n    const button = event.currentTarget;\n\n    const circle = window.document.createElement(\"span\");\n    const diameter = Math.max(button.clientWidth, button.clientHeight);\n    const radius = diameter / 2;\n\n    circle.style.width = circle.style.height = `${diameter}px`;\n    circle.style.left = `${event.clientX - button.offsetLeft - radius}px`;\n    circle.style.top = `${event.clientY - button.offsetTop - radius}px`;\n    circle.classList.add(\"ripple\");\n\n    const ripple = button.getElementsByClassName(\"ripple\")[0];\n\n    if (ripple) {\n      ripple.remove();\n    }\n\n    button.appendChild(circle);\n  }\n\n  const buttons = window.document.getElementsByTagName(\"button\");\n  for (const button of buttons) {\n    button.addEventListener(\"click\", createRipple);\n  }\n  return (\n    <Ripple\n      className={`cursor-pointer ${className} overflow-hidden rounded-md`}\n      onClick={onClick}\n      duration={300}\n    >\n      {children}\n    </Ripple>\n  );\n};\n\nexport default Btn;\n"]},"metadata":{},"sourceType":"module"}